plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.0.0'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'

    group 'eu.koboo.en2do'
    version '3.0.0-alpha-3'

    repositories {
        mavenCentral()
    }

    dependencies {

        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testCompileOnly "org.projectlombok:lombok:$lombokVersion"
        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

        testImplementation "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
        testImplementation "org.slf4j:slf4j-simple:$slf4jVersion"
        testImplementation "org.slf4j:jul-to-slf4j:$slf4jVersion"
    }

    test {
        useJUnitPlatform()
    }

    compileJava {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
        options.fork = true
        options.encoding = 'UTF-8'
        options.release.set(11)
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier.set('sources')
    }
    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier.set('javadoc')
    }

    publishing {
        repositories {
            maven {
                url('https://reposilite.koboo.eu/releases')
                credentials {
                    username(System.getenv('REPO_USER'))
                    password(System.getenv('REPO_TOKEN'))
                }
            }
        }
        publications {
            maven(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }

    shadowJar {
        relocate('org.jetbrains.annotations', 'eu.koboo.en2do.libs.intellij')
        relocate('intellij.lang.annotations', 'eu.koboo.en2do.libs.jetbrains')
        relocate('org.mongodb', 'eu.koboo.en2do.libs.mongo')
    }

    project.tasks.shadowJar.finalizedBy(project.tasks.javadocJar)
    project.tasks.shadowJar.finalizedBy(project.tasks.sourcesJar)
    project.tasks.publish.dependsOn(project.tasks.shadowJar)
}